(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n    min-height: 1em;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button, .add-project-button {\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.project-container {\n    display: flex;\n}\n\n.project-edit{\n    background-color: white;\n    width: 40px;\n    height: 30px;\n    margin: auto 0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB",sourcesContent:["body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n    min-height: 1em;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button, .add-project-button {\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.project-container {\n    display: flex;\n}\n\n.project-edit{\n    background-color: white;\n    width: 40px;\n    height: 30px;\n    margin: auto 0;\n}"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var l=this[d][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],d=0;d<e.length;d++){var l=e[d],c=o.base?l[0]+o.base:l[0],u=a[c]||0,s="".concat(c," ").concat(u);a[c]=u+1;var p=n(s),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,o);o.byIndex=d,t.splice(d,0,{identifier:s,updater:A,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=n(a[i]);t[d].references--}for(var l=o(e,r),c=0;c<a.length;c++){var u=n(a[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),d=n(565),l=n.n(d),c=n(216),u=n.n(c),s=n(589),p=n.n(s),m=n(426),A={};A.styleTagTransform=p(),A.setAttributes=l(),A.insert=i().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=u(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;let h=0;class g{constructor(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.column=r,this.id=h++}}class f{constructor(e,t){this.title=e,this.description=t,this.categories=[],this.todoItems=[]}addCategory(e){this.categories.push(e)}removeCategory(e){if(e){let t=this.getColumnIndex(e);this.todoItems.forEach((e=>{e.column==t&&this.todoItems.splice(this.todoItems.indexOf(e),1)})),this.categories.splice(this.categories.indexOf(e),1)}}addTodoItem(e){this.todoItems.push(e)}removeTodoItem(e){e&&this.todoItems.splice(this.todoItems.indexOf(e),1)}getColumnIndex(e){return this.categories.indexOf(e)+1}getTodoItem(e){let t=null;return this.todoItems.forEach((n=>{n.id==e&&(t=n)})),t}}function v(e,t,n,o=null){let r="",a="",i="",d=1;o&&(r=o.title,a=o.description,i=o.dueDate,d=o.priority);const l=document.createElement("dialog");l.classList.add("dialog-box");let c=I(l,"form",null,"todo-form");I(c,"h2","Title:"),I(c,"input",null,null,"todo-title-input").value=r,I(c,"h2","Description:");let u=I(c,"textarea",null,null,"todo-description-input");u.rows=10,u.value=a,I(c,"h2","Date");let s=I(c,"input",null,null,"todo-dueDate-input");if(s.type="date",s.value=i,I(c,"h2","Priority:"),I(c,"input",null,null,"todo-priority-input").value=d,I(c,"h2",`Category: ${t}`),o){let e=I(c,"button","Delete","delete-button","delete-button");e.type="button",e.data=o.id}else I(c,"button","Cancel","cancel-button","cancel-button").type="button";let p=I(c,"button","Submit");return p.data=n,p.id=o?o.id:"new",e.appendChild(l),l.showModal(),p}function b(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=I(o,"form",null,"category-form");I(r,"h2","Category name:"),I(r,"input",null,null,"category-name-input").value=n,t?I(r,"button","Delete","delete-button","delete-button").type="button":I(r,"button","Cancel","cancel-button","cancel-button").type="button";let a=I(r,"button","Submit");return e.appendChild(o),o.showModal(),a}function y(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=I(o,"form",null,"project-form");I(r,"h2","Project name:"),I(r,"input",null,null,"project-name-input").value=n,t?I(r,"button","Delete","delete-button","delete-button").type="button":I(r,"button","Cancel","cancel-button","cancel-button").type="button";let a=I(r,"button","Submit");return e.appendChild(o),o.showModal(),a}function I(e,t,n=null,o=null,r=null){let a=document.createElement(`${t}`);return r&&(a.id=r),o&&a.classList.add(o),n&&(a.innerText=n),e.appendChild(a),a}const E=document.body,C=document.getElementById("categories"),x=document.getElementById("todo-items"),B=document.getElementById("projects");let k=new f("Default project","This is the default project, feel free to add items or make a new project."),w=[];w.push(k);let j=null;j=k,j.addCategory("Things to get done.");let L=new g("I need to do this thing","Go see a man about a dog.","2023-01-01",1,1);function T(){if(j)(function(e,t){for(;t.hasChildNodes();)t.removeChild(t.lastChild);return e.categories.forEach((e=>I(t,"h3",e,"category-header"))),I(t,"button","+","add-category-button")})(j,C).addEventListener("click",N),function(e,t,n){for(;t.hasChildNodes();)t.removeChild(t.lastChild);let o=[],r=1;return e.categories.forEach((()=>{let a=1;e.todoItems.forEach((e=>{if(e.column==r){let o=I(t,"p",e.title,"todo-item");o.style.gridColumn=e.column,o.style.gridRow=a,a++,o.id=e.id,o.data=e.column,o.addEventListener("click",n)}}));let i=I(t,"button","+","add-todo-button");i.data=r,i.style.gridColumn=r,i.style.gridRow=a,a++,o.push(i),r++})),o}(j,x,D).forEach((e=>e.addEventListener("click",W))),document.querySelectorAll(".category-header").forEach((e=>e.addEventListener("click",M)));else{for(;C.hasChildNodes();)C.removeChild(C.lastChild);for(;x.hasChildNodes();)x.removeChild(x.lastChild)}(function(e,t){for(;e.hasChildNodes();)e.removeChild(e.lastChild);return t&&t.forEach((t=>{let n=I(e,"div",null,"project-container");I(n,"h3",t.title,"project-name"),I(n,"button","edit","project-edit").id=t.title})),I(e,"button","+","add-project-button")})(B,w).addEventListener("click",O),document.querySelectorAll(".project-name").forEach((e=>e.addEventListener("click",S))),document.querySelectorAll(".project-edit").forEach((e=>e.addEventListener("click",Y)))}function D(e){let t=j.getTodoItem(e.target.id);v(E,j.categories[t.column-1],t.column,t).addEventListener("click",$);let n=document.getElementById("delete-button");n?n.addEventListener("click",X):document.getElementById("cancel-button").addEventListener("click",Z)}function S(e){let t=e.target.innerText;w.forEach((e=>{e.title==t&&(j=e,T())}))}function Y(e){y(E,e.target.id).addEventListener("click",P);let t=document.getElementById("delete-button");t?t.addEventListener("click",U):document.getElementById("cancel-button").addEventListener("click",Z)}function M(e){b(E,e.target.innerText).addEventListener("click",R);let t=document.getElementById("delete-button");t?t.addEventListener("click",q):document.getElementById("cancel-button").addEventListener("click",Z)}function N(){b(E).addEventListener("click",R);let e=document.getElementById("delete-button");e?e.addEventListener("click",q):document.getElementById("cancel-button").addEventListener("click",Z)}function O(){y(E).addEventListener("click",P);let e=document.getElementById("delete-button");e?e.addEventListener("click",U):document.getElementById("cancel-button").addEventListener("click",Z)}function W(e){v(E,j.categories[e.target.data-1],e.target.data).addEventListener("click",$);let t=document.getElementById("delete-button");t?t.addEventListener("click",X):document.getElementById("cancel-button").addEventListener("click",Z)}function Z(e){e.preventDefault(),e.target.parentElement.parentElement.remove()}function R(e){e.preventDefault();let t=document.getElementById("category-name-input").value;t&&(j.categories.includes(t)?alert("You already have a category with this name"):(j.addCategory(t),T())),e.target.parentElement.parentElement.remove()}function P(e){e.preventDefault();let t=document.getElementById("project-name-input").value;if(t){let e=!1;w.forEach((n=>{n.title==t&&(e=!0,alert("You already have a project with this name"))})),e||(w.push(new f(`${t}`)),T())}e.target.parentElement.parentElement.remove()}function q(e){e.preventDefault();let t=document.getElementById("category-name-input").value;j.removeCategory(t),T(),e.target.parentElement.parentElement.remove()}function U(e){e.preventDefault();let t=document.getElementById("project-name-input").value;w.forEach((e=>{e.title==t&&(w.splice(w.indexOf(e),1),j=0==w.length?null:w[0],T())})),e.target.parentElement.parentElement.remove()}function X(e){e.preventDefault();let t=j.getTodoItem(e.target.data);j.removeTodoItem(t),T(),e.target.parentElement.parentElement.remove()}function $(e){if(e.preventDefault(),"new"==e.target.id){let t=document.getElementById("todo-title-input").value,n=document.getElementById("todo-description-input").value,o=document.getElementById("todo-dueDate-input").value,r=document.getElementById("todo-priority-input").value,a=new g(t,n,o,r,e.target.data);j.addTodoItem(a)}else{let t=j.getTodoItem(e.target.id);t.title=document.getElementById("todo-title-input").value,t.description=document.getElementById("todo-description-input").value,t.dueDate=document.getElementById("todo-dueDate-input").value,t.priority=document.getElementById("todo-priority-input").value}T(),e.target.parentElement.parentElement.remove()}j.addTodoItem(L),T()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,