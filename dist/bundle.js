(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB",sourcesContent:["body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=a[s]||0,u="".concat(s," ").concat(l);a[s]=l+1;var p=n(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var g=r(A,o);o.byIndex=d,t.splice(d,0,{identifier:u,updater:g,references:1})}i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=n(a[i]);t[d].references--}for(var c=o(e,r),s=0;s<a.length;s++){var l=n(a[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),d=n(565),c=n.n(d),s=n(216),l=n.n(s),u=n(589),p=n.n(u),A=n(426),g={};function h(e,t,n=!1){if(n)for(;t.hasChildNodes();)t.removeChild(t.lastChild);return e.categories.forEach((e=>f(t,"h3",e,"category-header"))),f(t,"button","+","add-category-button")}function f(e,t,n=null,o=null,r=null){let a=document.createElement(`${t}`);return r&&(a.id=r),o&&a.classList.add(o),n&&(a.innerText=n),e.appendChild(a),a}g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),t()(A.Z,g),A.Z&&A.Z.locals&&A.Z.locals;const m=document.body,v=document.getElementById("categories"),b=document.getElementById("todo-items");let C=null,y="Things to get done.",I=new class{constructor(e,t){this.title=e,this.description=t,this.categories=[],this.todoItems=[]}addCategory(e){this.categories.push(e)}removeCategory(e){this.categories.splice(this.categories.indexOf(e),1)}addTodoItem(e){this.todoItems.push(e)}removeTodoItem(e){this.todoItems.splice(this.todoItems.indexOf(e),1)}getGridColumnIndex(e){return this.categories.indexOf(e)+1}}("Default project","This is the default project, feel free to add items or make a new project.");C=I,C.addCategory(y);let x=new class{constructor(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.category=r}}("Something","this is a thing","tomorrow",1,y);C.addTodoItem(x);let B=h(C,v),E=function(e,t,n=!1){if(n)for(;t.hasChildNodes();)t.removeChild(t.lastChild);return e.todoItems.forEach((n=>{let o=f(t,"p",n.title,"todo-item");o.style.gridColumn=e.getGridColumnIndex(o.category)})),f(t,"button","+","add-todo-button")}(C,b);function k(){(function(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=f(o,"form",null,"category-form");f(r,"h2","Category name:"),f(r,"input",null,null,"category-name-input").value=n,t?f(r,"button","Delete","delete-button","delete-button").type="button":f(r,"button","Cancel","cancel-button","cancel-button").type="button";let a=f(r,"button","Submit");return e.appendChild(o),o.showModal(),a})(m).addEventListener("click",T);let e=document.getElementById("delete-button");e?e.addEventListener("click",categoryDeleted):document.getElementById("cancel-button").addEventListener("click",w)}function w(e){console.log(e.target.parentElement.parentElement),e.preventDefault(),e.target.parentElement.parentElement.remove()}function T(e){e.preventDefault();let t=document.getElementById("category-name-input").value;t&&(C.addCategory(t),B=h(C,v,!0),B.addEventListener("click",k)),e.target.parentElement.parentElement.remove()}function L(e){e.preventDefault(),e.target.parentElement.parentElement.remove()}B.addEventListener("click",k),E.addEventListener("click",(function(){(function(e,t=null){const n=document.createElement("dialog");n.classList.add("dialog-box"),f(n,"form",null,"todo-form")})().addEventListener("click",L)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,