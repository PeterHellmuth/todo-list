(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 225px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n    min-height: 1em;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button, .add-project-button {\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.project-container {\n    border-radius: 20px;\n    display: flex;\n    gap: 10px;\n    padding: 6px;\n}\n\n.project-container:hover{\n    background-color: lightgrey;\n}\n\n.project-edit{\n    background-color: white;\n    width: 40px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.current-project{\n    color: black;\n    background-color: white;\n\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,uBAAuB;;AAE3B",sourcesContent:["body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 225px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n    padding-right: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n    min-height: 1em;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button, .add-project-button {\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.project-container {\n    border-radius: 20px;\n    display: flex;\n    gap: 10px;\n    padding: 6px;\n}\n\n.project-container:hover{\n    background-color: lightgrey;\n}\n\n.project-edit{\n    background-color: white;\n    width: 40px;\n    height: 30px;\n    margin: auto 0;\n}\n\n.current-project{\n    color: black;\n    background-color: white;\n\n}\n\n"],sourceRoot:""}]);const l=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(i[d]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],l=0;l<e.length;l++){var d=e[l],c=o.base?d[0]+o.base:d[0],u=a[c]||0,s="".concat(c," ").concat(u);a[c]=u+1;var p=n(s),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=r(A,o);o.byIndex=l,t.splice(l,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var l=n(a[i]);t[l].references--}for(var d=o(e,r),c=0;c<a.length;c++){var u=n(a[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{Q:()=>S});var e=n(379),t=n.n(e),r=n(795),a=n.n(r),i=n(569),l=n.n(i),d=n(565),c=n.n(d),u=n(216),s=n.n(u),p=n(589),A=n.n(p),m=n(426),g={};g.styleTagTransform=A(),g.setAttributes=c(),g.insert=l().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=s(),t()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;class h{constructor(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.column=r,this.id=S()}}class f{constructor(e,t=[],n=[]){this.title=e,this.categories=t,this.todoItems=n,this.currentProject=!1}addCategory(e){this.categories.push(e)}removeCategory(e){if(e){let t=this.getColumnIndex(e);this.todoItems.forEach((e=>{e.column==t&&this.todoItems.splice(this.todoItems.indexOf(e),1)})),this.categories.splice(this.categories.indexOf(e),1)}}addTodoItem(e){this.todoItems.push(e)}removeTodoItem(e){e&&this.todoItems.splice(this.todoItems.indexOf(e),1)}getColumnIndex(e){return this.categories.indexOf(e)+1}getTodoItem(e){let t=null;return this.todoItems.forEach((n=>{n.id==e&&(t=n)})),t}}const v=15,I=15,b=10;function y(e,t,n,o=null){let r="",a="",i="",l=1;o&&(r=o.title,a=o.description,i=o.dueDate,l=o.priority);const d=document.createElement("dialog");d.classList.add("dialog-box");let c=B(d,"form",null,"todo-form");B(c,"h2","Title:"),B(c,"input",null,null,"todo-title-input").value=r,B(c,"h2","Description:");let u=B(c,"textarea",null,null,"todo-description-input");u.rows=b,u.value=a,B(c,"h2","Date");let s=B(c,"input",null,null,"todo-dueDate-input");if(s.type="date",s.value=i,B(c,"h2","Priority:"),B(c,"input",null,null,"todo-priority-input").value=l,B(c,"h2",`Category: ${t}`),o){let e=B(c,"button","Delete","delete-button","delete-button");e.type="button",e.data=o.id}else B(c,"button","Cancel","cancel-button","cancel-button").type="button";let p=B(c,"button","Submit");return p.data=n,p.id=o?o.id:"new",e.appendChild(d),d.showModal(),p}function C(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=B(o,"form",null,"category-form");B(r,"h2","Category name:");let a=B(r,"input",null,null,"category-name-input");a.maxLength=I,a.value=n,t?B(r,"button","Delete","delete-button","delete-button").type="button":B(r,"button","Cancel","cancel-button","cancel-button").type="button";let i=B(r,"button","Submit");return e.appendChild(o),o.showModal(),i}function E(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=B(o,"form",null,"project-form");B(r,"h2","Project name:");let a=B(r,"input",null,null,"project-name-input");a.maxLength=v,a.value=n,t?B(r,"button","Delete","delete-button","delete-button").type="button":B(r,"button","Cancel","cancel-button","cancel-button").type="button";let i=B(r,"button","Submit");return e.appendChild(o),o.showModal(),i}function B(e,t,n=null,o=null,r=null){let a=document.createElement(`${t}`);return r&&(a.id=r),o&&a.classList.add(o),n&&(a.innerText=n),e.appendChild(a),a}const x=document.body,k=document.getElementById("categories"),w=document.getElementById("todo-items"),j=document.getElementById("projects");let L=0;function S(){return L++}let T=new f("Default project");T.addCategory("Things to get done.");let D=new h("I need to do this thing","Go see a man about a dog.","2023-01-01",1,1);T.addTodoItem(D);let Y=[],N=null;function O(){if(N)(function(e,t){for(;t.hasChildNodes();)t.removeChild(t.lastChild);return e.categories.forEach((e=>B(t,"h3",e,"category-header"))),B(t,"button","+","add-category-button")})(N,k).addEventListener("click",J),function(e,t,n){for(;t.hasChildNodes();)t.removeChild(t.lastChild);let o=[],r=1;return e.categories.forEach((()=>{let a=1;e.todoItems.forEach((e=>{if(e.column==r){let o=B(t,"p",e.title,"todo-item");o.style.gridColumn=e.column,o.style.gridRow=a,a++,o.id=e.id,o.data=e.column,o.addEventListener("click",n)}}));let i=B(t,"button","+","add-todo-button");i.data=r,i.style.gridColumn=r,i.style.gridRow=a,a++,o.push(i),r++})),o}(N,w,M).forEach((e=>e.addEventListener("click",q))),document.querySelectorAll(".category-header").forEach((e=>e.addEventListener("click",W)));else{for(;k.hasChildNodes();)k.removeChild(k.lastChild);for(;w.hasChildNodes();)w.removeChild(w.lastChild)}(function(e,t){for(;e.hasChildNodes();)e.removeChild(e.lastChild);return t&&t.forEach((t=>{let n=B(e,"div",null,"project-container");t.currentProject&&n.classList.add("current-project"),B(n,"h3",t.title,"project-name"),B(n,"button","edit","project-edit").id=t.title})),B(e,"button","+","add-project-button")})(j,Y).addEventListener("click",R),document.querySelectorAll(".project-container").forEach((e=>e.addEventListener("click",Z))),document.querySelectorAll(".project-edit").forEach((e=>e.addEventListener("click",P))),Y.forEach((e=>{let t={title:e.title,categories:JSON.stringify(e.categories),todoItems:JSON.stringify(e.todoItems)};localStorage.setItem("todo-project-"+e.title,JSON.stringify(t))})),localStorage.setItem("todo-id",L)}function M(e){let t=N.getTodoItem(e.target.id);y(x,N.categories[t.column-1],t.column,t).addEventListener("click",Q);let n=document.getElementById("delete-button");n?n.addEventListener("click",G):document.getElementById("cancel-button").addEventListener("click",U)}function Z(e){let t=e.target.innerText;Y.forEach((e=>{e.title==t&&(F(e),O())}))}function P(e){E(x,e.target.id).addEventListener("click",$);let t=document.getElementById("delete-button");t?t.addEventListener("click",_):document.getElementById("cancel-button").addEventListener("click",U)}function W(e){C(x,e.target.innerText).addEventListener("click",X);let t=document.getElementById("delete-button");t?t.addEventListener("click",H):document.getElementById("cancel-button").addEventListener("click",U)}function J(){C(x).addEventListener("click",X);let e=document.getElementById("delete-button");e?e.addEventListener("click",H):document.getElementById("cancel-button").addEventListener("click",U)}function R(){E(x).addEventListener("click",$);let e=document.getElementById("delete-button");e?e.addEventListener("click",_):document.getElementById("cancel-button").addEventListener("click",U)}function q(e){y(x,N.categories[e.target.data-1],e.target.data).addEventListener("click",Q);let t=document.getElementById("delete-button");t?t.addEventListener("click",G):document.getElementById("cancel-button").addEventListener("click",U)}function U(e){e.preventDefault(),e.target.parentElement.parentElement.remove()}function X(e){e.preventDefault();let t=document.getElementById("category-name-input").value;t&&(N.categories.includes(t)?alert("You already have a category with this name"):(N.addCategory(t),O())),e.target.parentElement.parentElement.remove()}function $(e){e.preventDefault();let t=document.getElementById("project-name-input").value;if(t){let e=!1;Y.forEach((n=>{n.title==t&&(e=!0,alert("You already have a project with this name"))})),e||(Y.push(new f(`${t}`)),F(Y[Y.length-1]),O())}e.target.parentElement.parentElement.remove()}function F(e){N&&(N.currentProject=!1),N=e,N&&(N.currentProject=!0)}function H(e){e.preventDefault();let t=document.getElementById("category-name-input").value;N.removeCategory(t),O(),e.target.parentElement.parentElement.remove()}function _(e){e.preventDefault();let t=document.getElementById("project-name-input").value;Y.forEach((e=>{e.title==t&&(localStorage.removeItem("todo-project-"+e.title),Y.splice(Y.indexOf(e),1),0==Y.length?F(null):F(Y[0]),O())})),e.target.parentElement.parentElement.remove()}function G(e){e.preventDefault();let t=N.getTodoItem(e.target.data);N.removeTodoItem(t),O(),e.target.parentElement.parentElement.remove()}function Q(e){if(e.preventDefault(),"new"==e.target.id){let t=document.getElementById("todo-title-input").value,n=document.getElementById("todo-description-input").value,o=document.getElementById("todo-dueDate-input").value,r=document.getElementById("todo-priority-input").value,a=new h(t,n,o,r,e.target.data);N.addTodoItem(a)}else{let t=N.getTodoItem(e.target.id);t.title=document.getElementById("todo-title-input").value,t.description=document.getElementById("todo-description-input").value,t.dueDate=document.getElementById("todo-dueDate-input").value,t.priority=document.getElementById("todo-priority-input").value}O(),e.target.parentElement.parentElement.remove()}!function(){let e=!0;if(localStorage.length>0)for(let t=localStorage.length-1;t>=0;t--){const n=localStorage.key(t),o=localStorage.getItem(n);if("todo-"==n.slice(0,5))if("todo-id"==n.slice(0,7))L=Number(o);else{e=!1;let t=JSON.parse(o),n=[];JSON.parse(t.todoItems).forEach((e=>{n.push(new h(e.title,e.description,e.dueDate,e.priority,e.column))})),Y.push(new f(t.title,JSON.parse(t.categories),n)),N=Y[Y.length-1]}}e&&(console.log("no stored projects"),Y.push(T))}(),F(Y[0]),O()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,