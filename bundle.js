(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;;AAEtB;;AAEA;IACI,aAAa;IACb,wBAAwB;IACxB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,cAAc;AAClB",sourcesContent:["body{\n    margin: 0px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    height: 100vh;\n}\n\n.sidebar{\n    background-color: lightblue;\n    padding-left: 20px;\n}\n\n.header{\n    background-color: grey;\n    color: white;\n}\n\nh1{\n    margin: 0px;\n}\n\n.categories-section{\n    padding-left: 20px;\n    background-color: white;\n    color: black;\n}\n\n.header>h1{\n    padding-left: 20px;\n}\n\n#categories{\n    display: flex;\n    gap: 20px;\n}\n\n.category-header{\n    border: solid 1px;\n    width: 200px;\n    border-radius: 5px;\n\n}\n\n#todo-items{\n    display: grid;\n    grid-auto-columns: 200px;\n    gap: 20px;\n    padding-left: 20px;\n}\n\n.todo-item{\n    width: 200px;\n    border: solid 1px;\n    border-radius: 5px;\n}\n\n.add-todo-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: 0 auto;\n}\n\n.add-category-button{\n    background-color: white;\n    width: 30px;\n    height: 30px;\n    margin: auto 0;\n}"],sourceRoot:""}]);const d=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],d=0;d<e.length;d++){var c=e[d],l=o.base?c[0]+o.base:c[0],s=a[l]||0,u="".concat(l," ").concat(s);a[l]=s+1;var p=n(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var h=r(A,o);o.byIndex=d,t.splice(d,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var d=n(a[i]);t[d].references--}for(var c=o(e,r),l=0;l<a.length;l++){var s=n(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),d=n(565),c=n.n(d),l=n(216),s=n.n(l),u=n(589),p=n.n(u),A=n(426),h={};function m(e,t=null){let n="";t&&(n=t);const o=document.createElement("dialog");o.classList.add("dialog-box");let r=g(o,"form",null,"category-form");g(r,"h2","Category name:"),g(r,"input",null,null,"category-name-input").value=n,t?g(r,"button","Delete","delete-button","delete-button").type="button":g(r,"button","Cancel","cancel-button","cancel-button").type="button";let a=g(r,"button","Submit");return e.appendChild(o),o.showModal(),a}function g(e,t,n=null,o=null,r=null){let a=document.createElement(`${t}`);return r&&(a.id=r),o&&a.classList.add(o),n&&(a.innerText=n),e.appendChild(a),a}h.styleTagTransform=p(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=s(),t()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const f=document.body,v=document.getElementById("categories"),b=document.getElementById("todo-items");let C=null,y=new class{constructor(e,t){this.title=e,this.description=t,this.categories=[],this.todoItems=[]}addCategory(e){this.categories.push(e)}removeCategory(e){let t=this.getColumnIndex(e);this.todoItems.forEach((e=>{e.column==t&&this.todoItems.splice(this.todoItems.indexOf(e),1)})),this.categories.splice(this.categories.indexOf(e),1)}addTodoItem(e){this.todoItems.push(e)}removeTodoItem(e){this.todoItems.splice(this.todoItems.indexOf(e),1)}getColumnIndex(e){return this.categories.indexOf(e)+1}}("Default project","This is the default project, feel free to add items or make a new project.");C=y,C.addCategory("Things to get done.");let I=new class{constructor(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.column=r}}("Something","this is a thing","tomorrow",1,1);function x(){(function(e,t){for(;t.hasChildNodes();)t.removeChild(t.lastChild);return e.categories.forEach((e=>g(t,"h3",e,"category-header"))),g(t,"button","+","add-category-button")})(C,v).addEventListener("click",E),function(e,t){for(;t.hasChildNodes();)t.removeChild(t.lastChild);e.todoItems.forEach((e=>{g(t,"p",e.title,"todo-item").style.gridColumn=e.column}));let n=[],o=1;return e.categories.forEach((e=>{let r=g(t,"button","+","add-todo-button");r.style.gridColumn=o,n.push(r),o++})),n}(C,b).forEach((e=>e.addEventListener("click",k))),document.querySelectorAll(".category-header").forEach((e=>e.addEventListener("click",B)))}function B(e){m(f,e.target.innerText).addEventListener("click",L);let t=document.getElementById("delete-button");t?t.addEventListener("click",T):document.getElementById("cancel-button").addEventListener("click",w)}function E(){m(f).addEventListener("click",L);let e=document.getElementById("delete-button");e?e.addEventListener("click",T):document.getElementById("cancel-button").addEventListener("click",w)}function k(){(function(e,t,n=null){const o=document.createElement("dialog");o.classList.add("dialog-box"),g(o,"form",null,"todo-form")})().addEventListener("click",S)}function w(e){e.preventDefault(),e.target.parentElement.parentElement.remove()}function L(e){e.preventDefault();let t=document.getElementById("category-name-input").value;t&&(C.categories.includes(t)?alert("You already have a category with this name"):(C.addCategory(t),x())),e.target.parentElement.parentElement.remove()}function T(e){e.preventDefault();let t=document.getElementById("category-name-input").value;C.removeCategory(t),x(),e.target.parentElement.parentElement.remove()}function S(e){e.preventDefault(),e.target.parentElement.parentElement.remove()}C.addTodoItem(I),x()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,